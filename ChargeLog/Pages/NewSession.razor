@inject IChargeLogService _chargeLogService

<h4>New Session</h4>

<EditForm Model="@newSession" OnValidSubmit="@AddSession">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-2">
            <label for="date">Session Date</label>
            <InputText id="date" @bind-Value="newSession.Date" class="form-control" />
        </div>
        <div class="col-1">
            <label for="duration">Duration</label>
            <InputText id="duration" @bind-Value="newSession.Duration" class="form-control" />
        </div>
        <div class="col-1">
            <label for="kwh">kWh</label>
            <InputText id="kwh" @bind-Value="newSession.Kwh" class="form-control" />
        </div>
        <div class="col-1">
            <label for="price">Price</label>
            <InputText id="price" @bind-Value="newSession.Price" class="form-control" />
        </div>
         <div class="col-1">
            <label for="discount">Discount</label>
            <InputText id="discount" @bind-Value="newSession.Discount" class="form-control" />
        </div>
        <div class="col-2">
            <label for="chargetype">Charge Type</label>
            <InputSelect id="chargetype" @bind-Value="newSession.ChargeType" class="form-select">
                
                <option value="@ChargeType.AC" selected="@(network?.DefaultChargeType==ChargeType.AC)">@ChargeType.AC.ToString()</option>
                <option value="@ChargeType.DC" selected="@(network?.DefaultChargeType==ChargeType.DC)">@ChargeType.DC.ToString()</option>
            </InputSelect>
        </div>

        <div class="col-2">
            <label for="car">Car</label>
            <InputSelect id="car" @bind-Value="newSession.CarId" class="form-select">
                @foreach(var car in cars)
                {
                    <option value="@car.Id" >@car.DisplayName</option>
                }
               
            </InputSelect>
        </div>

        <div class="col-1 align-self-end">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int NetworkId { get; set; }

    [Parameter]
    public int LocationId { get; set; }

    private SessionView newSession = new SessionView();
    private Network? network;
    private List<Car> cars = new List<Car>();

    protected override async Task OnInitializedAsync()
    {
        network = await _chargeLogService.GetNetworkAsync(NetworkId);
        cars = await _chargeLogService.GetCarsAsync();
    }

    private async Task AddSession()
    {
      //  var location = new Location()
      //      {
      //          Name = newLocation.Name,
      //          Address = newLocation.Address,
      //          ProviderId = ProviderId
      //      };


       // await _chargeLogService.AddLocationAsync(location);


        newSession = new SessionView();
    }
}