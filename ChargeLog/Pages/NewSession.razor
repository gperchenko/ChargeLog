@inject IChargeLogService _chargeLogService

<h4>New Session</h4>

<EditForm Model="@newSession" OnValidSubmit="@AddSession">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-2">
            <label for="date">Session Date</label>
            <InputText id="date" @bind-Value="newSession.Date" class="form-control" />
        </div>
        <div class="col-1">
            <label for="duration">Duration</label>
            <InputText id="duration" @bind-Value="newSession.Duration" class="form-control" />
        </div>
        <div class="col-1">
            <label for="kwh">kWh</label>
            <InputText id="kwh" @bind-Value="newSession.Kwh" class="form-control" />
        </div>
        <div class="col-1">
            <label for="price">Price</label>
            <InputText id="price" @bind-Value="newSession.Price" class="form-control" />
        </div>
        <div class="col-2 align-self-end">
            <InputCheckbox id="isactualprice" @bind-Value="newSession.IsActualPrice" class="form-check-input"></InputCheckbox>
            <label for="isactualrate">Is Actual Price</label>
        </div>
        <div class="col-1 align-self-end">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>
</EditForm>

@code {
    //[Parameter]
    //public int ProviderId { get; set; }

    private SessionView newSession = new SessionView();

    private async Task AddSession()
    {
      //  var location = new Location()
      //      {
      //          Name = newLocation.Name,
      //          Address = newLocation.Address,
      //          ProviderId = ProviderId
      //      };


       // await _chargeLogService.AddLocationAsync(location);


        newSession = new SessionView();
    }
}