@inject IChargeLogService _chargeService

<div class="padding-left-5 network-list-body">
<NewNetwork></NewNetwork>

<hr />

<table class="table">
    <thead>
        <tr>
            <th>Network Name</th>
            <th>Location Count</th>
            <th>Session Count</th>
            <th>kWh</th>
            <th>Duration</th>
            <th>Price</th>
            <th>Discount</th>
            <th>Total Amount</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var network in _networkList)
        {
            <tr @onclick="()=> ShowDetails(network)" class=@(network.DisplayDetails ? "location-list-header" : "")>
                <td scope="row">@network.Name</td>
                <td scope="row">@network.Count</td>
                <td scope="row">@network.SessionCount</td>
                <td scope="row">@network.KWh</td>
                <td scope="row">@network.Duration.ToString(_config.TimeSpanFormat)</td>
                <td scope="row">@network.Price.ToString("C")</td>
                <td scope="row">@network.Discount.ToString("C")</td>
                <td scope="row">@((network.Price - network.Discount).ToString("C"))</td>
            </tr>

            @if (network.DisplayDetails)
            {
                <tr>
                        <td colspan="8" class="td-body">
                        <LocationList></LocationList>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

</div>

@code {
    private List<NetworkListItem> _networkList = new List<NetworkListItem>();
    private InterfaceConfig _config = new InterfaceConfig();

    protected override async Task OnInitializedAsync()
    {
        _networkList = await _chargeService.GetNetworkListAsync();
        _config = _chargeService.GetConfig();
    }

    private void ShowDetails(NetworkListItem network)
    {
        network.DisplayDetails = !network.DisplayDetails;
    }
}
